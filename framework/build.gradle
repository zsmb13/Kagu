buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
}
apply plugin: 'kotlin2js'
apply plugin: 'maven-publish'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
    compile "co.zsmb:koinjs:$koinjs_version"
}

def outDir = "$buildDir/kotlin2js/main"

compileKotlin2Js {
    kotlinOptions {
        outputFile = "$outDir/kagu.js"
        sourceMap = true
        sourceMapEmbedSources = "always"
        moduleKind = "umd"
    }
}

// Sources
task jarSources(type: Jar) {
    from(sourceSets.main.allSource) {
        include "**/*.kt"
    }
    classifier = 'sources'
}

artifacts {
    archives jarSources
}

// Library
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from(outDir) {
        include "*.js.map"
    }
}

def GROUP_ID = 'co.zsmb'
def ARTIFACT_ID = 'kagu'
def VERSION = '0.2.0'

publishing {
    publications {
        framework(MavenPublication) {
            groupId GROUP_ID
            artifactId ARTIFACT_ID
            version VERSION

            artifact jar
            artifact jarSources
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('bintrayUser')
    key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : System.getenv('bintrayKey')
    publications = ['framework']

    pkg {
        repo = 'Kagu'
        name = 'Kagu'

        version {
            name = VERSION
            released = new Date()
        }
    }
}

apply from: 'test.gradle'
